Grammar

    0 $accept: Program $end

    1 Program: ProgramElementList

    2 ProgramElementList: ProgramElement ProgramElementList
    3                   | %empty

    4 ProgramElement: VarDeclStmt
    5               | StructDef
    6               | FnDeclStmt
    7               | FnDef
    8               | ';'

    9 ArithExpr: ArithExpr '+' ArithExpr
   10          | ArithExpr '-' ArithExpr
   11          | ArithExpr '*' ArithExpr
   12          | ArithExpr '/' ArithExpr
   13          | ExprUnit

   14 ExprUnit: NUM
   15         | ID
   16         | '(' ArithExpr ')'
   17         | FnCall
   18         | LeftVal '[' NUM ']'
   19         | LeftVal '[' ID ']'
   20         | LeftVal '.' ID

   21 BoolExpr: BoolExpr AND BoolExpr
   22         | BoolExpr OR BoolExpr
   23         | BoolUnit

   24 ComExpr: ExprUnit '<' ExprUnit
   25        | ExprUnit LE ExprUnit
   26        | ExprUnit '>' ExprUnit
   27        | ExprUnit GE ExprUnit
   28        | ExprUnit EQ ExprUnit
   29        | ExprUnit NE ExprUnit

   30 BoolUnit: '(' ComExpr ')'
   31         | '(' BoolExpr ')'
   32         | '!' BoolUnit

   33 AssignStmt: LeftVal '=' RightVal ';'

   34 LeftVal: ID
   35        | LeftVal '[' NUM ']'
   36        | LeftVal '[' ID ']'
   37        | LeftVal '.' ID

   38 RightVal: ArithExpr
   39         | BoolExpr

   40 FnCall: ID '(' RightValList ')'

   41 RightValList: RightVal
   42             | RightVal ',' RightValList
   43             | %empty

   44 VarDeclStmt: LET VarDecl ';'
   45            | LET VarDef ';'

   46 VarDecl: ID ':' Type
   47        | ID '[' NUM ']' ':' Type
   48        | ID
   49        | ID '[' NUM ']'

   50 VarDef: ID ':' Type '=' RightVal
   51       | ID '=' RightVal
   52       | ID '[' NUM ']' ':' Type '=' '{' RightValList '}'
   53       | ID '[' NUM ']' '=' '{' RightValList '}'

   54 Type: INT
   55     | ID

   56 StructDef: STRUCT ID '{' VarDeclList '}'

   57 VarDeclList: VarDecl
   58            | VarDecl ',' VarDeclList
   59            | %empty

   60 FnDeclStmt: FnDecl ';'

   61 FnDecl: FN ID '(' ParamDecl ')'
   62       | FN ID '(' ParamDecl ')' ARROW Type

   63 ParamDecl: VarDeclList

   64 FnDef: FnDecl '{' CodeBlockStmtList '}'

   65 CodeBlockStmtList: CodeBlockStmt CodeBlockStmtList
   66                  | %empty

   67 CodeBlockStmt: VarDeclStmt
   68              | AssignStmt
   69              | CallStmt
   70              | IfStmt
   71              | WhileStmt
   72              | ReturnStmt
   73              | CONTINUE ';'
   74              | BREAK ';'
   75              | ';'

   76 ReturnStmt: RETURN RightVal ';'
   77           | RETURN ';'

   78 CallStmt: FnCall ';'

   79 CondUnit: '(' ComExpr ')'
   80         | '(' BoolExpr ')'
   81         | '(' '!' BoolUnit ')'

   82 IfStmt: IF CondUnit '{' CodeBlockStmtList '}' ELSE '{' CodeBlockStmtList '}'
   83       | IF CondUnit '{' CodeBlockStmtList '}'

   84 WhileStmt: WHILE CondUnit '{' CodeBlockStmtList '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' <pos> (33) 32 81
    '(' <pos> (40) 16 30 31 40 61 62 79 80 81
    ')' <pos> (41) 16 30 31 40 61 62 79 80 81
    '*' <pos> (42) 11
    '+' <pos> (43) 9
    ',' <pos> (44) 42 58
    '-' <pos> (45) 10
    '.' <pos> (46) 20 37
    '/' <pos> (47) 12
    ':' <pos> (58) 46 47 50 52
    ';' <pos> (59) 8 33 44 45 60 73 74 75 76 77 78
    '<' <pos> (60) 24
    '=' <pos> (61) 33 50 51 52 53
    '>' <pos> (62) 26
    '[' <pos> (91) 18 19 35 36 47 49 52 53
    ']' <pos> (93) 18 19 35 36 47 49 52 53
    '{' <pos> (123) 52 53 56 64 82 83 84
    '}' <pos> (125) 52 53 56 64 82 83 84
    error (256)
    OR <pos> (258) 22
    AND <pos> (259) 21
    LE <pos> (260) 25
    GE <pos> (261) 27
    EQ <pos> (262) 28
    NE <pos> (263) 29
    ARROW <pos> (264) 62
    LET <pos> (265) 44 45
    STRUCT <pos> (266) 56
    FN <pos> (267) 61 62
    RETURN <pos> (268) 76 77
    IF <pos> (269) 82 83
    ELSE <pos> (270) 82
    WHILE <pos> (271) 84
    CONTINUE <pos> (272) 73
    BREAK <pos> (273) 74
    INT <pos> (274) 54
    ID <tokenId> (275) 15 19 20 34 36 37 40 46 47 48 49 50 51 52 53 55 56 61 62
    NUM <tokenNum> (276) 14 18 35 47 49 52 53


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    Program <program> (41)
        on left: 1
        on right: 0
    ProgramElementList <programElementList> (42)
        on left: 2 3
        on right: 1 2
    ProgramElement <programElement> (43)
        on left: 4 5 6 7 8
        on right: 2
    ArithExpr <arithExpr> (44)
        on left: 9 10 11 12 13
        on right: 9 10 11 12 16 38
    ExprUnit <exprUnit> (45)
        on left: 14 15 16 17 18 19 20
        on right: 13 24 25 26 27 28 29
    BoolExpr <boolExpr> (46)
        on left: 21 22 23
        on right: 21 22 31 39 80
    ComExpr <comExpr> (47)
        on left: 24 25 26 27 28 29
        on right: 30 79
    BoolUnit <boolUnit> (48)
        on left: 30 31 32
        on right: 23 32 81
    AssignStmt <assignStmt> (49)
        on left: 33
        on right: 68
    LeftVal <leftVal> (50)
        on left: 34 35 36 37
        on right: 18 19 20 33 35 36 37
    RightVal <rightVal> (51)
        on left: 38 39
        on right: 33 41 42 50 51 76
    FnCall <fnCall> (52)
        on left: 40
        on right: 17 78
    RightValList <rightValList> (53)
        on left: 41 42 43
        on right: 40 42 52 53
    VarDeclStmt <varDeclStmt> (54)
        on left: 44 45
        on right: 4 67
    VarDecl <varDecl> (55)
        on left: 46 47 48 49
        on right: 44 57 58
    VarDef <varDef> (56)
        on left: 50 51 52 53
        on right: 45
    Type <type> (57)
        on left: 54 55
        on right: 46 47 50 52 62
    StructDef <structDef> (58)
        on left: 56
        on right: 5
    VarDeclList <varDeclList> (59)
        on left: 57 58 59
        on right: 56 58 63
    FnDeclStmt <fnDeclStmt> (60)
        on left: 60
        on right: 6
    FnDecl <fnDecl> (61)
        on left: 61 62
        on right: 60 64
    ParamDecl <paramDecl> (62)
        on left: 63
        on right: 61 62
    FnDef <fnDef> (63)
        on left: 64
        on right: 7
    CodeBlockStmtList <codeBlockStmtList> (64)
        on left: 65 66
        on right: 64 65 82 83 84
    CodeBlockStmt <codeBlockStmt> (65)
        on left: 67 68 69 70 71 72 73 74 75
        on right: 65
    ReturnStmt <returnStmt> (66)
        on left: 76 77
        on right: 72
    CallStmt <callStmt> (67)
        on left: 78
        on right: 69
    CondUnit <boolUnit> (68)
        on left: 79 80 81
        on right: 82 83 84
    IfStmt <ifStmt> (69)
        on left: 82 83
        on right: 70
    WhileStmt <whileStmt> (70)
        on left: 84
        on right: 71


State 0

    0 $accept: . Program $end

    ';'     shift, and go to state 1
    LET     shift, and go to state 2
    STRUCT  shift, and go to state 3
    FN      shift, and go to state 4

    $default  reduce using rule 3 (ProgramElementList)

    Program             go to state 5
    ProgramElementList  go to state 6
    ProgramElement      go to state 7
    VarDeclStmt         go to state 8
    StructDef           go to state 9
    FnDeclStmt          go to state 10
    FnDecl              go to state 11
    FnDef               go to state 12


State 1

    8 ProgramElement: ';' .

    $default  reduce using rule 8 (ProgramElement)


State 2

   44 VarDeclStmt: LET . VarDecl ';'
   45            | LET . VarDef ';'

    ID  shift, and go to state 13

    VarDecl  go to state 14
    VarDef   go to state 15


State 3

   56 StructDef: STRUCT . ID '{' VarDeclList '}'

    ID  shift, and go to state 16


State 4

   61 FnDecl: FN . ID '(' ParamDecl ')'
   62       | FN . ID '(' ParamDecl ')' ARROW Type

    ID  shift, and go to state 17


State 5

    0 $accept: Program . $end

    $end  shift, and go to state 18


State 6

    1 Program: ProgramElementList .

    $default  reduce using rule 1 (Program)


State 7

    2 ProgramElementList: ProgramElement . ProgramElementList

    ';'     shift, and go to state 1
    LET     shift, and go to state 2
    STRUCT  shift, and go to state 3
    FN      shift, and go to state 4

    $default  reduce using rule 3 (ProgramElementList)

    ProgramElementList  go to state 19
    ProgramElement      go to state 7
    VarDeclStmt         go to state 8
    StructDef           go to state 9
    FnDeclStmt          go to state 10
    FnDecl              go to state 11
    FnDef               go to state 12


State 8

    4 ProgramElement: VarDeclStmt .

    $default  reduce using rule 4 (ProgramElement)


State 9

    5 ProgramElement: StructDef .

    $default  reduce using rule 5 (ProgramElement)


State 10

    6 ProgramElement: FnDeclStmt .

    $default  reduce using rule 6 (ProgramElement)


State 11

   60 FnDeclStmt: FnDecl . ';'
   64 FnDef: FnDecl . '{' CodeBlockStmtList '}'

    ';'  shift, and go to state 20
    '{'  shift, and go to state 21


State 12

    7 ProgramElement: FnDef .

    $default  reduce using rule 7 (ProgramElement)


State 13

   46 VarDecl: ID . ':' Type
   47        | ID . '[' NUM ']' ':' Type
   48        | ID .
   49        | ID . '[' NUM ']'
   50 VarDef: ID . ':' Type '=' RightVal
   51       | ID . '=' RightVal
   52       | ID . '[' NUM ']' ':' Type '=' '{' RightValList '}'
   53       | ID . '[' NUM ']' '=' '{' RightValList '}'

    '='  shift, and go to state 22
    ':'  shift, and go to state 23
    '['  shift, and go to state 24

    $default  reduce using rule 48 (VarDecl)


State 14

   44 VarDeclStmt: LET VarDecl . ';'

    ';'  shift, and go to state 25


State 15

   45 VarDeclStmt: LET VarDef . ';'

    ';'  shift, and go to state 26


State 16

   56 StructDef: STRUCT ID . '{' VarDeclList '}'

    '{'  shift, and go to state 27


State 17

   61 FnDecl: FN ID . '(' ParamDecl ')'
   62       | FN ID . '(' ParamDecl ')' ARROW Type

    '('  shift, and go to state 28


State 18

    0 $accept: Program $end .

    $default  accept


State 19

    2 ProgramElementList: ProgramElement ProgramElementList .

    $default  reduce using rule 2 (ProgramElementList)


State 20

   60 FnDeclStmt: FnDecl ';' .

    $default  reduce using rule 60 (FnDeclStmt)


State 21

   64 FnDef: FnDecl '{' . CodeBlockStmtList '}'

    ';'       shift, and go to state 29
    LET       shift, and go to state 2
    RETURN    shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    BREAK     shift, and go to state 34
    ID        shift, and go to state 35

    $default  reduce using rule 66 (CodeBlockStmtList)

    AssignStmt         go to state 36
    LeftVal            go to state 37
    FnCall             go to state 38
    VarDeclStmt        go to state 39
    CodeBlockStmtList  go to state 40
    CodeBlockStmt      go to state 41
    ReturnStmt         go to state 42
    CallStmt           go to state 43
    IfStmt             go to state 44
    WhileStmt          go to state 45


State 22

   51 VarDef: ID '=' . RightVal

    '!'  shift, and go to state 46
    '('  shift, and go to state 47
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ArithExpr  go to state 50
    ExprUnit   go to state 51
    BoolExpr   go to state 52
    BoolUnit   go to state 53
    LeftVal    go to state 54
    RightVal   go to state 55
    FnCall     go to state 56


State 23

   46 VarDecl: ID ':' . Type
   50 VarDef: ID ':' . Type '=' RightVal

    INT  shift, and go to state 57
    ID   shift, and go to state 58

    Type  go to state 59


State 24

   47 VarDecl: ID '[' . NUM ']' ':' Type
   49        | ID '[' . NUM ']'
   52 VarDef: ID '[' . NUM ']' ':' Type '=' '{' RightValList '}'
   53       | ID '[' . NUM ']' '=' '{' RightValList '}'

    NUM  shift, and go to state 60


State 25

   44 VarDeclStmt: LET VarDecl ';' .

    $default  reduce using rule 44 (VarDeclStmt)


State 26

   45 VarDeclStmt: LET VarDef ';' .

    $default  reduce using rule 45 (VarDeclStmt)


State 27

   56 StructDef: STRUCT ID '{' . VarDeclList '}'

    ID  shift, and go to state 61

    $default  reduce using rule 59 (VarDeclList)

    VarDecl      go to state 62
    VarDeclList  go to state 63


State 28

   61 FnDecl: FN ID '(' . ParamDecl ')'
   62       | FN ID '(' . ParamDecl ')' ARROW Type

    ID  shift, and go to state 61

    $default  reduce using rule 59 (VarDeclList)

    VarDecl      go to state 62
    VarDeclList  go to state 64
    ParamDecl    go to state 65


State 29

   75 CodeBlockStmt: ';' .

    $default  reduce using rule 75 (CodeBlockStmt)


State 30

   76 ReturnStmt: RETURN . RightVal ';'
   77           | RETURN . ';'

    '!'  shift, and go to state 46
    ';'  shift, and go to state 66
    '('  shift, and go to state 47
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ArithExpr  go to state 50
    ExprUnit   go to state 51
    BoolExpr   go to state 52
    BoolUnit   go to state 53
    LeftVal    go to state 54
    RightVal   go to state 67
    FnCall     go to state 56


State 31

   82 IfStmt: IF . CondUnit '{' CodeBlockStmtList '}' ELSE '{' CodeBlockStmtList '}'
   83       | IF . CondUnit '{' CodeBlockStmtList '}'

    '('  shift, and go to state 68

    CondUnit  go to state 69


State 32

   84 WhileStmt: WHILE . CondUnit '{' CodeBlockStmtList '}'

    '('  shift, and go to state 68

    CondUnit  go to state 70


State 33

   73 CodeBlockStmt: CONTINUE . ';'

    ';'  shift, and go to state 71


State 34

   74 CodeBlockStmt: BREAK . ';'

    ';'  shift, and go to state 72


State 35

   34 LeftVal: ID .
   40 FnCall: ID . '(' RightValList ')'

    '('  shift, and go to state 73

    $default  reduce using rule 34 (LeftVal)


State 36

   68 CodeBlockStmt: AssignStmt .

    $default  reduce using rule 68 (CodeBlockStmt)


State 37

   33 AssignStmt: LeftVal . '=' RightVal ';'
   35 LeftVal: LeftVal . '[' NUM ']'
   36        | LeftVal . '[' ID ']'
   37        | LeftVal . '.' ID

    '='  shift, and go to state 74
    '.'  shift, and go to state 75
    '['  shift, and go to state 76


State 38

   78 CallStmt: FnCall . ';'

    ';'  shift, and go to state 77


State 39

   67 CodeBlockStmt: VarDeclStmt .

    $default  reduce using rule 67 (CodeBlockStmt)


State 40

   64 FnDef: FnDecl '{' CodeBlockStmtList . '}'

    '}'  shift, and go to state 78


State 41

   65 CodeBlockStmtList: CodeBlockStmt . CodeBlockStmtList

    ';'       shift, and go to state 29
    LET       shift, and go to state 2
    RETURN    shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    BREAK     shift, and go to state 34
    ID        shift, and go to state 35

    $default  reduce using rule 66 (CodeBlockStmtList)

    AssignStmt         go to state 36
    LeftVal            go to state 37
    FnCall             go to state 38
    VarDeclStmt        go to state 39
    CodeBlockStmtList  go to state 79
    CodeBlockStmt      go to state 41
    ReturnStmt         go to state 42
    CallStmt           go to state 43
    IfStmt             go to state 44
    WhileStmt          go to state 45


State 42

   72 CodeBlockStmt: ReturnStmt .

    $default  reduce using rule 72 (CodeBlockStmt)


State 43

   69 CodeBlockStmt: CallStmt .

    $default  reduce using rule 69 (CodeBlockStmt)


State 44

   70 CodeBlockStmt: IfStmt .

    $default  reduce using rule 70 (CodeBlockStmt)


State 45

   71 CodeBlockStmt: WhileStmt .

    $default  reduce using rule 71 (CodeBlockStmt)


State 46

   32 BoolUnit: '!' . BoolUnit

    '!'  shift, and go to state 46
    '('  shift, and go to state 80

    BoolUnit  go to state 81


State 47

   16 ExprUnit: '(' . ArithExpr ')'
   30 BoolUnit: '(' . ComExpr ')'
   31         | '(' . BoolExpr ')'

    '!'  shift, and go to state 46
    '('  shift, and go to state 47
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ArithExpr  go to state 82
    ExprUnit   go to state 83
    BoolExpr   go to state 84
    ComExpr    go to state 85
    BoolUnit   go to state 53
    LeftVal    go to state 54
    FnCall     go to state 56


State 48

   15 ExprUnit: ID .
   34 LeftVal: ID .
   40 FnCall: ID . '(' RightValList ')'

    '('  shift, and go to state 73

    '.'       reduce using rule 34 (LeftVal)
    '['       reduce using rule 34 (LeftVal)
    $default  reduce using rule 15 (ExprUnit)


State 49

   14 ExprUnit: NUM .

    $default  reduce using rule 14 (ExprUnit)


State 50

    9 ArithExpr: ArithExpr . '+' ArithExpr
   10          | ArithExpr . '-' ArithExpr
   11          | ArithExpr . '*' ArithExpr
   12          | ArithExpr . '/' ArithExpr
   38 RightVal: ArithExpr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 38 (RightVal)


State 51

   13 ArithExpr: ExprUnit .

    $default  reduce using rule 13 (ArithExpr)


State 52

   21 BoolExpr: BoolExpr . AND BoolExpr
   22         | BoolExpr . OR BoolExpr
   39 RightVal: BoolExpr .

    OR   shift, and go to state 90
    AND  shift, and go to state 91

    $default  reduce using rule 39 (RightVal)


State 53

   23 BoolExpr: BoolUnit .

    $default  reduce using rule 23 (BoolExpr)


State 54

   18 ExprUnit: LeftVal . '[' NUM ']'
   19         | LeftVal . '[' ID ']'
   20         | LeftVal . '.' ID
   35 LeftVal: LeftVal . '[' NUM ']'
   36        | LeftVal . '[' ID ']'
   37        | LeftVal . '.' ID

    '.'  shift, and go to state 92
    '['  shift, and go to state 93


State 55

   51 VarDef: ID '=' RightVal .

    $default  reduce using rule 51 (VarDef)


State 56

   17 ExprUnit: FnCall .

    $default  reduce using rule 17 (ExprUnit)


State 57

   54 Type: INT .

    $default  reduce using rule 54 (Type)


State 58

   55 Type: ID .

    $default  reduce using rule 55 (Type)


State 59

   46 VarDecl: ID ':' Type .
   50 VarDef: ID ':' Type . '=' RightVal

    '='  shift, and go to state 94

    $default  reduce using rule 46 (VarDecl)


State 60

   47 VarDecl: ID '[' NUM . ']' ':' Type
   49        | ID '[' NUM . ']'
   52 VarDef: ID '[' NUM . ']' ':' Type '=' '{' RightValList '}'
   53       | ID '[' NUM . ']' '=' '{' RightValList '}'

    ']'  shift, and go to state 95


State 61

   46 VarDecl: ID . ':' Type
   47        | ID . '[' NUM ']' ':' Type
   48        | ID .
   49        | ID . '[' NUM ']'

    ':'  shift, and go to state 96
    '['  shift, and go to state 97

    $default  reduce using rule 48 (VarDecl)


State 62

   57 VarDeclList: VarDecl .
   58            | VarDecl . ',' VarDeclList

    ','  shift, and go to state 98

    $default  reduce using rule 57 (VarDeclList)


State 63

   56 StructDef: STRUCT ID '{' VarDeclList . '}'

    '}'  shift, and go to state 99


State 64

   63 ParamDecl: VarDeclList .

    $default  reduce using rule 63 (ParamDecl)


State 65

   61 FnDecl: FN ID '(' ParamDecl . ')'
   62       | FN ID '(' ParamDecl . ')' ARROW Type

    ')'  shift, and go to state 100


State 66

   77 ReturnStmt: RETURN ';' .

    $default  reduce using rule 77 (ReturnStmt)


State 67

   76 ReturnStmt: RETURN RightVal . ';'

    ';'  shift, and go to state 101


State 68

   79 CondUnit: '(' . ComExpr ')'
   80         | '(' . BoolExpr ')'
   81         | '(' . '!' BoolUnit ')'

    '!'  shift, and go to state 102
    '('  shift, and go to state 47
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ExprUnit  go to state 103
    BoolExpr  go to state 104
    ComExpr   go to state 105
    BoolUnit  go to state 53
    LeftVal   go to state 54
    FnCall    go to state 56


State 69

   82 IfStmt: IF CondUnit . '{' CodeBlockStmtList '}' ELSE '{' CodeBlockStmtList '}'
   83       | IF CondUnit . '{' CodeBlockStmtList '}'

    '{'  shift, and go to state 106


State 70

   84 WhileStmt: WHILE CondUnit . '{' CodeBlockStmtList '}'

    '{'  shift, and go to state 107


State 71

   73 CodeBlockStmt: CONTINUE ';' .

    $default  reduce using rule 73 (CodeBlockStmt)


State 72

   74 CodeBlockStmt: BREAK ';' .

    $default  reduce using rule 74 (CodeBlockStmt)


State 73

   40 FnCall: ID '(' . RightValList ')'

    '!'  shift, and go to state 46
    '('  shift, and go to state 47
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    $default  reduce using rule 43 (RightValList)

    ArithExpr     go to state 50
    ExprUnit      go to state 51
    BoolExpr      go to state 52
    BoolUnit      go to state 53
    LeftVal       go to state 54
    RightVal      go to state 108
    FnCall        go to state 56
    RightValList  go to state 109


State 74

   33 AssignStmt: LeftVal '=' . RightVal ';'

    '!'  shift, and go to state 46
    '('  shift, and go to state 47
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ArithExpr  go to state 50
    ExprUnit   go to state 51
    BoolExpr   go to state 52
    BoolUnit   go to state 53
    LeftVal    go to state 54
    RightVal   go to state 110
    FnCall     go to state 56


State 75

   37 LeftVal: LeftVal '.' . ID

    ID  shift, and go to state 111


State 76

   35 LeftVal: LeftVal '[' . NUM ']'
   36        | LeftVal '[' . ID ']'

    ID   shift, and go to state 112
    NUM  shift, and go to state 113


State 77

   78 CallStmt: FnCall ';' .

    $default  reduce using rule 78 (CallStmt)


State 78

   64 FnDef: FnDecl '{' CodeBlockStmtList '}' .

    $default  reduce using rule 64 (FnDef)


State 79

   65 CodeBlockStmtList: CodeBlockStmt CodeBlockStmtList .

    $default  reduce using rule 65 (CodeBlockStmtList)


State 80

   30 BoolUnit: '(' . ComExpr ')'
   31         | '(' . BoolExpr ')'

    '!'  shift, and go to state 46
    '('  shift, and go to state 47
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ExprUnit  go to state 103
    BoolExpr  go to state 84
    ComExpr   go to state 85
    BoolUnit  go to state 53
    LeftVal   go to state 54
    FnCall    go to state 56


State 81

   32 BoolUnit: '!' BoolUnit .

    $default  reduce using rule 32 (BoolUnit)


State 82

    9 ArithExpr: ArithExpr . '+' ArithExpr
   10          | ArithExpr . '-' ArithExpr
   11          | ArithExpr . '*' ArithExpr
   12          | ArithExpr . '/' ArithExpr
   16 ExprUnit: '(' ArithExpr . ')'

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    ')'  shift, and go to state 114


State 83

   13 ArithExpr: ExprUnit .
   24 ComExpr: ExprUnit . '<' ExprUnit
   25        | ExprUnit . LE ExprUnit
   26        | ExprUnit . '>' ExprUnit
   27        | ExprUnit . GE ExprUnit
   28        | ExprUnit . EQ ExprUnit
   29        | ExprUnit . NE ExprUnit

    '<'  shift, and go to state 115
    '>'  shift, and go to state 116
    LE   shift, and go to state 117
    GE   shift, and go to state 118
    EQ   shift, and go to state 119
    NE   shift, and go to state 120

    $default  reduce using rule 13 (ArithExpr)


State 84

   21 BoolExpr: BoolExpr . AND BoolExpr
   22         | BoolExpr . OR BoolExpr
   31 BoolUnit: '(' BoolExpr . ')'

    OR   shift, and go to state 90
    AND  shift, and go to state 91
    ')'  shift, and go to state 121


State 85

   30 BoolUnit: '(' ComExpr . ')'

    ')'  shift, and go to state 122


State 86

    9 ArithExpr: ArithExpr '+' . ArithExpr

    '('  shift, and go to state 123
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ArithExpr  go to state 124
    ExprUnit   go to state 51
    LeftVal    go to state 54
    FnCall     go to state 56


State 87

   10 ArithExpr: ArithExpr '-' . ArithExpr

    '('  shift, and go to state 123
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ArithExpr  go to state 125
    ExprUnit   go to state 51
    LeftVal    go to state 54
    FnCall     go to state 56


State 88

   11 ArithExpr: ArithExpr '*' . ArithExpr

    '('  shift, and go to state 123
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ArithExpr  go to state 126
    ExprUnit   go to state 51
    LeftVal    go to state 54
    FnCall     go to state 56


State 89

   12 ArithExpr: ArithExpr '/' . ArithExpr

    '('  shift, and go to state 123
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ArithExpr  go to state 127
    ExprUnit   go to state 51
    LeftVal    go to state 54
    FnCall     go to state 56


State 90

   22 BoolExpr: BoolExpr OR . BoolExpr

    '!'  shift, and go to state 46
    '('  shift, and go to state 80

    BoolExpr  go to state 128
    BoolUnit  go to state 53


State 91

   21 BoolExpr: BoolExpr AND . BoolExpr

    '!'  shift, and go to state 46
    '('  shift, and go to state 80

    BoolExpr  go to state 129
    BoolUnit  go to state 53


State 92

   20 ExprUnit: LeftVal '.' . ID
   37 LeftVal: LeftVal '.' . ID

    ID  shift, and go to state 130


State 93

   18 ExprUnit: LeftVal '[' . NUM ']'
   19         | LeftVal '[' . ID ']'
   35 LeftVal: LeftVal '[' . NUM ']'
   36        | LeftVal '[' . ID ']'

    ID   shift, and go to state 131
    NUM  shift, and go to state 132


State 94

   50 VarDef: ID ':' Type '=' . RightVal

    '!'  shift, and go to state 46
    '('  shift, and go to state 47
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ArithExpr  go to state 50
    ExprUnit   go to state 51
    BoolExpr   go to state 52
    BoolUnit   go to state 53
    LeftVal    go to state 54
    RightVal   go to state 133
    FnCall     go to state 56


State 95

   47 VarDecl: ID '[' NUM ']' . ':' Type
   49        | ID '[' NUM ']' .
   52 VarDef: ID '[' NUM ']' . ':' Type '=' '{' RightValList '}'
   53       | ID '[' NUM ']' . '=' '{' RightValList '}'

    '='  shift, and go to state 134
    ':'  shift, and go to state 135

    $default  reduce using rule 49 (VarDecl)


State 96

   46 VarDecl: ID ':' . Type

    INT  shift, and go to state 57
    ID   shift, and go to state 58

    Type  go to state 136


State 97

   47 VarDecl: ID '[' . NUM ']' ':' Type
   49        | ID '[' . NUM ']'

    NUM  shift, and go to state 137


State 98

   58 VarDeclList: VarDecl ',' . VarDeclList

    ID  shift, and go to state 61

    $default  reduce using rule 59 (VarDeclList)

    VarDecl      go to state 62
    VarDeclList  go to state 138


State 99

   56 StructDef: STRUCT ID '{' VarDeclList '}' .

    $default  reduce using rule 56 (StructDef)


State 100

   61 FnDecl: FN ID '(' ParamDecl ')' .
   62       | FN ID '(' ParamDecl ')' . ARROW Type

    ARROW  shift, and go to state 139

    $default  reduce using rule 61 (FnDecl)


State 101

   76 ReturnStmt: RETURN RightVal ';' .

    $default  reduce using rule 76 (ReturnStmt)


State 102

   32 BoolUnit: '!' . BoolUnit
   81 CondUnit: '(' '!' . BoolUnit ')'

    '!'  shift, and go to state 46
    '('  shift, and go to state 80

    BoolUnit  go to state 140


State 103

   24 ComExpr: ExprUnit . '<' ExprUnit
   25        | ExprUnit . LE ExprUnit
   26        | ExprUnit . '>' ExprUnit
   27        | ExprUnit . GE ExprUnit
   28        | ExprUnit . EQ ExprUnit
   29        | ExprUnit . NE ExprUnit

    '<'  shift, and go to state 115
    '>'  shift, and go to state 116
    LE   shift, and go to state 117
    GE   shift, and go to state 118
    EQ   shift, and go to state 119
    NE   shift, and go to state 120


State 104

   21 BoolExpr: BoolExpr . AND BoolExpr
   22         | BoolExpr . OR BoolExpr
   80 CondUnit: '(' BoolExpr . ')'

    OR   shift, and go to state 90
    AND  shift, and go to state 91
    ')'  shift, and go to state 141


State 105

   79 CondUnit: '(' ComExpr . ')'

    ')'  shift, and go to state 142


State 106

   82 IfStmt: IF CondUnit '{' . CodeBlockStmtList '}' ELSE '{' CodeBlockStmtList '}'
   83       | IF CondUnit '{' . CodeBlockStmtList '}'

    ';'       shift, and go to state 29
    LET       shift, and go to state 2
    RETURN    shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    BREAK     shift, and go to state 34
    ID        shift, and go to state 35

    $default  reduce using rule 66 (CodeBlockStmtList)

    AssignStmt         go to state 36
    LeftVal            go to state 37
    FnCall             go to state 38
    VarDeclStmt        go to state 39
    CodeBlockStmtList  go to state 143
    CodeBlockStmt      go to state 41
    ReturnStmt         go to state 42
    CallStmt           go to state 43
    IfStmt             go to state 44
    WhileStmt          go to state 45


State 107

   84 WhileStmt: WHILE CondUnit '{' . CodeBlockStmtList '}'

    ';'       shift, and go to state 29
    LET       shift, and go to state 2
    RETURN    shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    BREAK     shift, and go to state 34
    ID        shift, and go to state 35

    $default  reduce using rule 66 (CodeBlockStmtList)

    AssignStmt         go to state 36
    LeftVal            go to state 37
    FnCall             go to state 38
    VarDeclStmt        go to state 39
    CodeBlockStmtList  go to state 144
    CodeBlockStmt      go to state 41
    ReturnStmt         go to state 42
    CallStmt           go to state 43
    IfStmt             go to state 44
    WhileStmt          go to state 45


State 108

   41 RightValList: RightVal .
   42             | RightVal . ',' RightValList

    ','  shift, and go to state 145

    $default  reduce using rule 41 (RightValList)


State 109

   40 FnCall: ID '(' RightValList . ')'

    ')'  shift, and go to state 146


State 110

   33 AssignStmt: LeftVal '=' RightVal . ';'

    ';'  shift, and go to state 147


State 111

   37 LeftVal: LeftVal '.' ID .

    $default  reduce using rule 37 (LeftVal)


State 112

   36 LeftVal: LeftVal '[' ID . ']'

    ']'  shift, and go to state 148


State 113

   35 LeftVal: LeftVal '[' NUM . ']'

    ']'  shift, and go to state 149


State 114

   16 ExprUnit: '(' ArithExpr ')' .

    $default  reduce using rule 16 (ExprUnit)


State 115

   24 ComExpr: ExprUnit '<' . ExprUnit

    '('  shift, and go to state 123
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ExprUnit  go to state 150
    LeftVal   go to state 54
    FnCall    go to state 56


State 116

   26 ComExpr: ExprUnit '>' . ExprUnit

    '('  shift, and go to state 123
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ExprUnit  go to state 151
    LeftVal   go to state 54
    FnCall    go to state 56


State 117

   25 ComExpr: ExprUnit LE . ExprUnit

    '('  shift, and go to state 123
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ExprUnit  go to state 152
    LeftVal   go to state 54
    FnCall    go to state 56


State 118

   27 ComExpr: ExprUnit GE . ExprUnit

    '('  shift, and go to state 123
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ExprUnit  go to state 153
    LeftVal   go to state 54
    FnCall    go to state 56


State 119

   28 ComExpr: ExprUnit EQ . ExprUnit

    '('  shift, and go to state 123
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ExprUnit  go to state 154
    LeftVal   go to state 54
    FnCall    go to state 56


State 120

   29 ComExpr: ExprUnit NE . ExprUnit

    '('  shift, and go to state 123
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ExprUnit  go to state 155
    LeftVal   go to state 54
    FnCall    go to state 56


State 121

   31 BoolUnit: '(' BoolExpr ')' .

    $default  reduce using rule 31 (BoolUnit)


State 122

   30 BoolUnit: '(' ComExpr ')' .

    $default  reduce using rule 30 (BoolUnit)


State 123

   16 ExprUnit: '(' . ArithExpr ')'

    '('  shift, and go to state 123
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    ArithExpr  go to state 82
    ExprUnit   go to state 51
    LeftVal    go to state 54
    FnCall     go to state 56


State 124

    9 ArithExpr: ArithExpr . '+' ArithExpr
    9          | ArithExpr '+' ArithExpr .
   10          | ArithExpr . '-' ArithExpr
   11          | ArithExpr . '*' ArithExpr
   12          | ArithExpr . '/' ArithExpr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 9 (ArithExpr)


State 125

    9 ArithExpr: ArithExpr . '+' ArithExpr
   10          | ArithExpr . '-' ArithExpr
   10          | ArithExpr '-' ArithExpr .
   11          | ArithExpr . '*' ArithExpr
   12          | ArithExpr . '/' ArithExpr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 10 (ArithExpr)


State 126

    9 ArithExpr: ArithExpr . '+' ArithExpr
   10          | ArithExpr . '-' ArithExpr
   11          | ArithExpr . '*' ArithExpr
   11          | ArithExpr '*' ArithExpr .
   12          | ArithExpr . '/' ArithExpr

    $default  reduce using rule 11 (ArithExpr)


State 127

    9 ArithExpr: ArithExpr . '+' ArithExpr
   10          | ArithExpr . '-' ArithExpr
   11          | ArithExpr . '*' ArithExpr
   12          | ArithExpr . '/' ArithExpr
   12          | ArithExpr '/' ArithExpr .

    $default  reduce using rule 12 (ArithExpr)


State 128

   21 BoolExpr: BoolExpr . AND BoolExpr
   22         | BoolExpr . OR BoolExpr
   22         | BoolExpr OR BoolExpr .

    $default  reduce using rule 22 (BoolExpr)


State 129

   21 BoolExpr: BoolExpr . AND BoolExpr
   21         | BoolExpr AND BoolExpr .
   22         | BoolExpr . OR BoolExpr

    $default  reduce using rule 21 (BoolExpr)


State 130

   20 ExprUnit: LeftVal '.' ID .
   37 LeftVal: LeftVal '.' ID .

    '.'       reduce using rule 37 (LeftVal)
    '['       reduce using rule 37 (LeftVal)
    $default  reduce using rule 20 (ExprUnit)


State 131

   19 ExprUnit: LeftVal '[' ID . ']'
   36 LeftVal: LeftVal '[' ID . ']'

    ']'  shift, and go to state 156


State 132

   18 ExprUnit: LeftVal '[' NUM . ']'
   35 LeftVal: LeftVal '[' NUM . ']'

    ']'  shift, and go to state 157


State 133

   50 VarDef: ID ':' Type '=' RightVal .

    $default  reduce using rule 50 (VarDef)


State 134

   53 VarDef: ID '[' NUM ']' '=' . '{' RightValList '}'

    '{'  shift, and go to state 158


State 135

   47 VarDecl: ID '[' NUM ']' ':' . Type
   52 VarDef: ID '[' NUM ']' ':' . Type '=' '{' RightValList '}'

    INT  shift, and go to state 57
    ID   shift, and go to state 58

    Type  go to state 159


State 136

   46 VarDecl: ID ':' Type .

    $default  reduce using rule 46 (VarDecl)


State 137

   47 VarDecl: ID '[' NUM . ']' ':' Type
   49        | ID '[' NUM . ']'

    ']'  shift, and go to state 160


State 138

   58 VarDeclList: VarDecl ',' VarDeclList .

    $default  reduce using rule 58 (VarDeclList)


State 139

   62 FnDecl: FN ID '(' ParamDecl ')' ARROW . Type

    INT  shift, and go to state 57
    ID   shift, and go to state 58

    Type  go to state 161


State 140

   32 BoolUnit: '!' BoolUnit .
   81 CondUnit: '(' '!' BoolUnit . ')'

    ')'  shift, and go to state 162

    $default  reduce using rule 32 (BoolUnit)


State 141

   80 CondUnit: '(' BoolExpr ')' .

    $default  reduce using rule 80 (CondUnit)


State 142

   79 CondUnit: '(' ComExpr ')' .

    $default  reduce using rule 79 (CondUnit)


State 143

   82 IfStmt: IF CondUnit '{' CodeBlockStmtList . '}' ELSE '{' CodeBlockStmtList '}'
   83       | IF CondUnit '{' CodeBlockStmtList . '}'

    '}'  shift, and go to state 163


State 144

   84 WhileStmt: WHILE CondUnit '{' CodeBlockStmtList . '}'

    '}'  shift, and go to state 164


State 145

   42 RightValList: RightVal ',' . RightValList

    '!'  shift, and go to state 46
    '('  shift, and go to state 47
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    $default  reduce using rule 43 (RightValList)

    ArithExpr     go to state 50
    ExprUnit      go to state 51
    BoolExpr      go to state 52
    BoolUnit      go to state 53
    LeftVal       go to state 54
    RightVal      go to state 108
    FnCall        go to state 56
    RightValList  go to state 165


State 146

   40 FnCall: ID '(' RightValList ')' .

    $default  reduce using rule 40 (FnCall)


State 147

   33 AssignStmt: LeftVal '=' RightVal ';' .

    $default  reduce using rule 33 (AssignStmt)


State 148

   36 LeftVal: LeftVal '[' ID ']' .

    $default  reduce using rule 36 (LeftVal)


State 149

   35 LeftVal: LeftVal '[' NUM ']' .

    $default  reduce using rule 35 (LeftVal)


State 150

   24 ComExpr: ExprUnit '<' ExprUnit .

    $default  reduce using rule 24 (ComExpr)


State 151

   26 ComExpr: ExprUnit '>' ExprUnit .

    $default  reduce using rule 26 (ComExpr)


State 152

   25 ComExpr: ExprUnit LE ExprUnit .

    $default  reduce using rule 25 (ComExpr)


State 153

   27 ComExpr: ExprUnit GE ExprUnit .

    $default  reduce using rule 27 (ComExpr)


State 154

   28 ComExpr: ExprUnit EQ ExprUnit .

    $default  reduce using rule 28 (ComExpr)


State 155

   29 ComExpr: ExprUnit NE ExprUnit .

    $default  reduce using rule 29 (ComExpr)


State 156

   19 ExprUnit: LeftVal '[' ID ']' .
   36 LeftVal: LeftVal '[' ID ']' .

    '.'       reduce using rule 36 (LeftVal)
    '['       reduce using rule 36 (LeftVal)
    $default  reduce using rule 19 (ExprUnit)


State 157

   18 ExprUnit: LeftVal '[' NUM ']' .
   35 LeftVal: LeftVal '[' NUM ']' .

    '.'       reduce using rule 35 (LeftVal)
    '['       reduce using rule 35 (LeftVal)
    $default  reduce using rule 18 (ExprUnit)


State 158

   53 VarDef: ID '[' NUM ']' '=' '{' . RightValList '}'

    '!'  shift, and go to state 46
    '('  shift, and go to state 47
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    $default  reduce using rule 43 (RightValList)

    ArithExpr     go to state 50
    ExprUnit      go to state 51
    BoolExpr      go to state 52
    BoolUnit      go to state 53
    LeftVal       go to state 54
    RightVal      go to state 108
    FnCall        go to state 56
    RightValList  go to state 166


State 159

   47 VarDecl: ID '[' NUM ']' ':' Type .
   52 VarDef: ID '[' NUM ']' ':' Type . '=' '{' RightValList '}'

    '='  shift, and go to state 167

    $default  reduce using rule 47 (VarDecl)


State 160

   47 VarDecl: ID '[' NUM ']' . ':' Type
   49        | ID '[' NUM ']' .

    ':'  shift, and go to state 168

    $default  reduce using rule 49 (VarDecl)


State 161

   62 FnDecl: FN ID '(' ParamDecl ')' ARROW Type .

    $default  reduce using rule 62 (FnDecl)


State 162

   81 CondUnit: '(' '!' BoolUnit ')' .

    $default  reduce using rule 81 (CondUnit)


State 163

   82 IfStmt: IF CondUnit '{' CodeBlockStmtList '}' . ELSE '{' CodeBlockStmtList '}'
   83       | IF CondUnit '{' CodeBlockStmtList '}' .

    ELSE  shift, and go to state 169

    $default  reduce using rule 83 (IfStmt)


State 164

   84 WhileStmt: WHILE CondUnit '{' CodeBlockStmtList '}' .

    $default  reduce using rule 84 (WhileStmt)


State 165

   42 RightValList: RightVal ',' RightValList .

    $default  reduce using rule 42 (RightValList)


State 166

   53 VarDef: ID '[' NUM ']' '=' '{' RightValList . '}'

    '}'  shift, and go to state 170


State 167

   52 VarDef: ID '[' NUM ']' ':' Type '=' . '{' RightValList '}'

    '{'  shift, and go to state 171


State 168

   47 VarDecl: ID '[' NUM ']' ':' . Type

    INT  shift, and go to state 57
    ID   shift, and go to state 58

    Type  go to state 172


State 169

   82 IfStmt: IF CondUnit '{' CodeBlockStmtList '}' ELSE . '{' CodeBlockStmtList '}'

    '{'  shift, and go to state 173


State 170

   53 VarDef: ID '[' NUM ']' '=' '{' RightValList '}' .

    $default  reduce using rule 53 (VarDef)


State 171

   52 VarDef: ID '[' NUM ']' ':' Type '=' '{' . RightValList '}'

    '!'  shift, and go to state 46
    '('  shift, and go to state 47
    ID   shift, and go to state 48
    NUM  shift, and go to state 49

    $default  reduce using rule 43 (RightValList)

    ArithExpr     go to state 50
    ExprUnit      go to state 51
    BoolExpr      go to state 52
    BoolUnit      go to state 53
    LeftVal       go to state 54
    RightVal      go to state 108
    FnCall        go to state 56
    RightValList  go to state 174


State 172

   47 VarDecl: ID '[' NUM ']' ':' Type .

    $default  reduce using rule 47 (VarDecl)


State 173

   82 IfStmt: IF CondUnit '{' CodeBlockStmtList '}' ELSE '{' . CodeBlockStmtList '}'

    ';'       shift, and go to state 29
    LET       shift, and go to state 2
    RETURN    shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    BREAK     shift, and go to state 34
    ID        shift, and go to state 35

    $default  reduce using rule 66 (CodeBlockStmtList)

    AssignStmt         go to state 36
    LeftVal            go to state 37
    FnCall             go to state 38
    VarDeclStmt        go to state 39
    CodeBlockStmtList  go to state 175
    CodeBlockStmt      go to state 41
    ReturnStmt         go to state 42
    CallStmt           go to state 43
    IfStmt             go to state 44
    WhileStmt          go to state 45


State 174

   52 VarDef: ID '[' NUM ']' ':' Type '=' '{' RightValList . '}'

    '}'  shift, and go to state 176


State 175

   82 IfStmt: IF CondUnit '{' CodeBlockStmtList '}' ELSE '{' CodeBlockStmtList . '}'

    '}'  shift, and go to state 177


State 176

   52 VarDef: ID '[' NUM ']' ':' Type '=' '{' RightValList '}' .

    $default  reduce using rule 52 (VarDef)


State 177

   82 IfStmt: IF CondUnit '{' CodeBlockStmtList '}' ELSE '{' CodeBlockStmtList '}' .

    $default  reduce using rule 82 (IfStmt)
